// Code generated by gen_content_copy. DO NOT EDIT.

package route

import (
	"fmt"
	"github.com/labstack/echo/v4"
	"net/http"
)

func InitRouter(g *echo.Group) {
	for _, r := range __routeIncubators {
		__loadCommonRouter(g, r)
		if t, ok := r.(__customRouterHandler); ok {
			t.customRouters(g)
		}
	}
}

type __customRouterHandler interface {
	customRouters(g *echo.Group)
}

var __routeIncubators []any

func registerRouteIncubator(r any) {
	__routeIncubators = append(__routeIncubators, r)
}

func __loadCommonRouter(g *echo.Group, router any) {
	if t, ok := router.(__getter); ok {
		t.getterRouter(g)
	}
}

type __getter interface {
	getterRouter(g *echo.Group)
}

type getter[DM model.DatabaseModel, REQ any] struct{}

func (getter[DM, REQ]) getterRouter(g *echo.Group) {
	var _dm DM
	var _req REQ
	name := _dm.ModelName()
	class := _dm.ModelClass()
	_ = copyContent[REQ, DM](&_req)
	g.POST(fmt.Sprintf("/%s/%s/get", class, name), func(c echo.Context) error {
		req := new(REQ)
		m := copyContent[REQ, DM](req)
		rsp := dao.Get(m)
		return c.JSON(http.StatusOK, rsp)
	})
}
